```javascript
const handler = async (m, { isOwner, isAdmin, conn, text, participants, args, command, usedPrefix }) => {

  if (usedPrefix == 'a' || usedPrefix == 'A') return;

  if (!(isAdmin || isOwner)) {
    global.dfail('admin', m, conn);
    throw false;
  }
  
  const getFlag = (phone) => {
    const countryFlags = {
      '1': 'üá∫üá∏', // Estados Unidos
      '44': 'üá¨üáß', // Reino Unido
      '52': 'üá≤üáΩ', // M√©xico
      '91': 'üáÆüá≥', // India
      // Agrega m√°s prefijos y banderas seg√∫n sea necesario
    };
    const prefix = phone.split('@')[0].slice(0, 3);
    return countryFlags[prefix] || 'üè≥'; // Bandera blanca para otros
  };

  const pesan = args.join` `;
  const oi = `‚á¢=ÕüÕüÕûÕûüÑ∞ŒΩŒØ‡§Ω‡´≠ : ${pesan}`;
  let teks = `(„Å•ÔΩ°‚óï‚Äø‚óïÔΩ°)„Å• üíõ Revivan Plantas"\n  ‚ßºPÃº‚ßΩ= ${participants.length} ‚ÑôùêÄùîçùêàÍ™Ä…ôÔªú\n\n ${oi}\n\n‚ï≠‚Ä¢‚îà‚îà‚Ä¢‚îà‚îà‚ä∞üî•‚É™·úîÍ´∂‚îà‚Ä¢‚îà‚îà‚Ä¢‚óå·úì ›ä ·úíùÖÑ\n`;
  for (const mem of participants) {
    const flag = getFlag(mem.id);
    teks += `‚îÇ ü´°·ù∞. ${flag} @${mem.id.split('@')[0]}\n`;
  }
  teks += `‚ï∞‚îÄ‚îê ‚Ä¢ ‚Ä¢„Ö§‚Ä¢-ÀèÀã‚úøÀäÀé-‚Ä¢ ‚Ä¢„Ö§‚Ä¢
        Íí∑Ô∏∂Ô∏∂Íí∑Ô∏∂Ô∏∂Íí∑Íí¶Ô∏∂‚úßÍí∑‚ÇäÀö`;
  conn.sendMessage(m.chat, { text: teks, mentions: participants.map((a) => a.id) });
};

handler.help = ['todos <mensaje>'];
handler.tags = ['group'];
handler.command = /^(tagall|invocar|marcar|todos|invocaci√≥n)$/i;
handler.admin = true;
handler.group = true;

export default handler;
```

