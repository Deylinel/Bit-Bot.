const handler = async (m, { isOwner, isAdmin, conn, text, participants, args, command, usedPrefix }) => {

  if (usedPrefix === 'a' || usedPrefix === 'A') return;

  if (!(isAdmin || isOwner)) {
    global.dfail('admin', m, conn);
    throw false;
  }

  const getFlag = (phone) => {
    const countryFlags = {
      // Puedes agregar m√°s prefijos y banderas si lo necesitas
    };
    const prefix = phone.split('@')[0].slice(0, 3);
    return countryFlags[prefix] || 'üö©'; // Bandera predeterminada
  };

  const pesan = args.join` `;
  const oi = `‚ö°üí¨ ùêíùêàùêíùêìùêÑùêåùêÄ: ${pesan}`;
  
  let teks = `‚ïî‚ïê‚îÅ‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚ïê‚ä∞ **ùêÇùêéùêåùêåùêÄùêçùêÉ ùêÄùêÇùêìùêàùêïùêÄùêìùêÑùêÉ** ‚ä±‚ïê‚îÅ‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚ïê‚ïó\n`;
  teks += `\nüåå **ùêíùêàùêçùêÜùêîùêãùêÄùêë ùêçùêÑùêìùêñùêéùêëùêä ùêÇùêÄùêãùêã** üåå\n`;
  teks += `üëæ **ùêÄùêúùê≠ùê¢ùêØùê®ùê¨**: ${participants.length}\n\n`;
  teks += `${oi}\n\n`;
  teks += `‚ï≠‚îÄ‚îÄ‚îÄ‚âΩ„Äå **ùêåùêÄùêëùêÇùêÄ ùêîùêçùêàùêïùêÑùêëùêíùêÄùêã** „Äç‚îÄ‚îÄ‚îÄ‚âº\n`;
  
  for (const mem of participants) {
    const flag = getFlag(mem.id);
    teks += `‚îÉ ‚ú¶ ${flag} @${mem.id.split('@')[0]}\n`;
  }

  teks += `‚ï∞‚îÄ‚îÄ‚îÄ‚îÅ‚ïê‚ä∞ **ùêìùêÑùêãùêÑùêåùêÑùêìùêëùêàùêÄ ùêÇùêéùêåùêèùêãùêÑùêìùêÄ** ‚ä±‚îÅ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ\n`;
  teks += `\nüõ∏ **ùêíùêìùêÄùêìùêîùêí**: Preparado para interacci√≥n ‚öôÔ∏è`;
  teks += `\nüì° **ùêçùêéùêìùêàùêÖùêàùêÇùêÄùêÇùêàùêéùêç ùêÑùêçùêïùêàùêÄùêÉùêÄ** ‚úÖ`;

  conn.sendMessage(m.chat, { text: teks, mentions: participants.map((a) => a.id) });
};

handler.help = ['todos <mensaje>'];
handler.tags = ['group'];
handler.command = /^(tagall|invocar|marcar|todos|invocaci√≥n)$/i;
handler.admin = true;
handler.group = true;

export default handler;