const handler = async (m, { isOwner, isAdmin, conn, text, participants, args, command, usedPrefix }) => {

  if (usedPrefix === 'a' || usedPrefix === 'A') return;

  if (!(isAdmin || isOwner)) {
    global.dfail('admin', m, conn);
    throw false;
  }
  
  const getFlag = (phone) => {
    const countryFlags = {
      // Puedes agregar m√°s prefijos y banderas aqu√≠
    };
    const prefix = phone.split('@')[0].slice(0, 3);
    return countryFlags[prefix] || 'üåê'; // Predeterminado a un globo terr√°queo
  };

  const pesan = args.join` `;
  const oi = `üõ∏‚ãÜ‚ü¢ ${pesan}`;
  
  let teks = `‚ïî‚ïê‚ïê‚ïê‚ùñ‚Ä¢‡≥ã¬∞¬∞‡≥ã‚Ä¢‚ùñ‚ïê‚ïê‚ïê‚ïó\n      üåå ùêåùêîùêãùêìùêà-ùêÉùêàùêåùêÑùêçùêíùêàùêéùêçùêÄùêã ùêÇùêÄùêãùêã üåå\n‚ïö‚ïê‚ïê‚ïê‚ùñ‚Ä¢‡≥ã¬∞¬∞‡≥ã‚Ä¢‚ùñ‚ïê‚ïê‚ïê‚ïù\n\n`;
  teks += `‚ú¶ **ùêÇùê®ùêßùêßùêûùêúùê≠ùê¢ùêßùê† ùê≠ùê® ùêèùêöùê´ùê≠ùê¢ùêúùê¢ùê©ùêöùêßùê≠ùê¨...** ‚ú¶\n`;
  teks += `üåü **Participantes en √≥rbita**: ${participants.length}\n\n`;
  teks += `üöÄ: *${oi}*\n\n`;
  teks += `‚ïî‚ïê‚îÅ‚îÄ‚îÄ‚îÅ‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚ïê‚ä∞‚Ä¢‚ä±‚ïê‚îÅ‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚îÄ‚îÄ‚îÅ‚ïê‚ïó\n`;

  for (const mem of participants) {
    const flag = getFlag(mem.id);
    teks += `‚ü° ‚ú¶ ${flag} @${mem.id.split('@')[0]}\n`;
  }
  
  teks += `‚ïö‚ïê‚îÅ‚îÄ‚îÄ‚îÅ‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚ïê‚ä∞‚Ä¢‚ä±‚ïê‚îÅ‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚îÄ‚îÄ‚îÅ‚ïê‚ïù\n`;
  teks += `üíæ **ùîªùî∏ùïãùî∏ ùïå‚ÑôùïÉùïÜùî∏ùîª ùïäùïå‚ÑÇ‚ÑÇùîºùïäùïäùîΩùïåùïÉ** üíæ\n`;
  teks += `‚ö° *Sistema en l√≠nea: Todos listos para interactuar* ‚ö°`;

  conn.sendMessage(m.chat, { text: teks, mentions: participants.map((a) => a.id) });
};

handler.help = ['todos <mensaje>'];
handler.tags = ['group'];
handler.command = /^(tagall|invocar|marcar|todos|invocaci√≥n)$/i;
handler.admin = true;
handler.group = true;

export default handler;