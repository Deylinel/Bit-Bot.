const handler = async (m, { isOwner, isAdmin, conn, text, participants, args, command, usedPrefix }) => {

  if (usedPrefix === 'a' || usedPrefix === 'A') return;

  if (!(isAdmin || isOwner)) {
    global.dfail('admin', m, conn);
    throw false;
  }
  
  const getFlag = (phone) => {
    const countryFlags = {
      // Puedes agregar m√°s prefijos y banderas seg√∫n sea necesario
    };
    const prefix = phone.split('@')[0].slice(0, 3);
    return countryFlags[prefix] || 'üåê'; // Bandera predeterminada
  };

  const pesan = args.join` `;
  const oi = `ü™ê‚¨©‚≠ë‚Åé‚Å∫À≥ ${pesan}`;
  let teks = `‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‡ºª‚ùÅ‡º∫‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïÆ\n‚ü¢ ‚ö° ùïÑùïÜùîªùîº‚Ñù‚Ñï ‚ÑÇùïÜùïÑùïÑùïå‚ÑïùïÄ‚ÑÇùî∏ùïãùïÄùïÜ‚Ñï ‚ö°\n‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‡ºª‚ùÅ‡º∫‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ\n\n‚û§ ‚ü° „Äé *Mensaje Universal* „Äè‚ü°\n‚úß üöÄ **PARTICIPANTES ACTIVOS**: ${participants.length}\n\n${oi}\n\n‚ú¶ÔΩ•Ôæü‚ü¢‚öôÔ∏è‚ü£ ‚Ä¢ **ùî∏ùïÉùïÉ ùîªùîºùïçùïÄ‚ÑÇùîºùïä ùïäùîºùïã** ‚Ä¢ ‚ü°ÔΩ•Ôæü‚ú¶\n‚ï≠‚ä±‚Ä¢‚îÄ‚îÄ‚ä∞üîπ‚ä±‚îÄ‚îÄ‚Ä¢‚ä∞‚ä±‚îÄ‚ïÆ\n`;
  
  for (const mem of participants) {
    const flag = getFlag(mem.id);
    teks += `‚Ü≥ ‚ú¶ ${flag} ‚ü° @${mem.id.split('@')[0]}\n`;
  }
  
  teks += `‚ï∞‚îÄ‚Ä¢‚ä±‚ùñ‚ä∞‚Ä¢‚îÄ‚Ä¢‚ä±‚îÄ‚ïØ\n‚ü¢‚¶ø ‚úß ·¥ò Ä·¥á·¥ò·¥Ä Ä·¥Ä·¥Ö·¥è “ì·¥è Ä ·¥Ö·¥á·¥ò ü·¥è è ‚úß ‚¶ø‚ü£`;

  conn.sendMessage(m.chat, { text: teks, mentions: participants.map((a) => a.id) });
};

handler.help = ['todos <mensaje>'];
handler.tags = ['group'];
handler.command = /^(tagall|invocar|marcar|todos|invocaci√≥n)$/i;
handler.admin = true;
handler.group = true;

export default handler;